%Hacer aproximacion difusa de la funcion
%y=0.6*sin(pi*x)+0.3*sin(3*pi*x)+0.1*sin(5*pi*x);
%use el metodo Anfis. Compare la aproximacion difusa con teaching y cheking data.

clear
clc
%primero generaremos training y checking data. Generaremos 51 parejas entrada
%salida
numPts=51;
x=linspace(-1,1,numPts)';
y=0.6*sin(pi*x)+0.3*sin(3*pi*x)+0.1*sin(5*pi*x);
data=[x y];
trndata=data(1:2:numPts,:); %extrae los impares (empezando con el 1 recupera cada 2)
chkdata=data(2:2:numPts,:); %extrae los pares (empezando con el 2 recupera cada 2)

%Plot training and checking data with symbols o and x respectively:
plot(trndata(:,1),trndata(:,2),'o',chkdata(:,1),chkdata(:,2),'x')
%Next we configure fuzzy system for training. First we set the number and type
%of input membership functions:  

numMFs=5;
mfType='gbellmf';

%Then FIS-matrix fismat is generated by command genfis1:
fismat=genfis1(trndata,numMFs,mfType);

%It is possible to plot the membership functions by commands plot and plotmf:
[x,mf]=plotmf(fismat,'input',1);
plot(x,mf)
 
numEpochs=500;
[fismat1,trnErr,ss,fismat2,chkErr]=anfis(trndata,fismat,numEpochs,NaN,chkdata);

chkErr(end)*1000
